*{
    margin: 0px;
    padding: 0px;
}
.main{
    border: 3px solid black;
    display: grid;
    grid-template-rows: 150px 150px; /* 150px here is the height given for the row of two rows , here only block 1 and block2 gets height of 150px
    where other blocks are the same of*/
    grid-template-columns: 150px 150px 150px; /* Here for the column , its for the width of column , says there should 
    be three coulmm of width 150px*/
    

}  
.min{
    display: grid;
   margin:10px;
   padding: 20px;
   display: grid;
   align-content: end;
}

.alters{
    margin-top: 40px;
    border: 3px solid black;
    display: grid;
    grid-template-rows: 150px 150px 150px; 

    grid-template-columns:repeat(4 ,1fr);
    grid-row-gap:10px;
    grid-column-gap: 40px;/* gris-gap:10px both roe and column will have 
    10px gap in between */
     
     
}
.alfo{
    grid-area:1/2/3/4; /* grid-area:row start/cloumn start/roe end /coulmn end */
}
.alt{
    margin-top: 40px;
    border: 3px solid black;
    display: grid;
    grid-template-rows: 150px 150px; 
    grid-template-columns: 1fr 1fr 1fr; /* 1r is fractional unit that take complete space available in the container 
    in which the gris is applied */
    grid-auto-rows: 150px; /* yo nagareko vaye block 4 and 6 
    appear smaller , its auto indicate that whatever implicit row are there its gonna 
    be 150 px [need to do in main container ]*/
    
   

}
.altr{
    border: 3px solid black;
    display: grid;
    grid-template-rows: 150px 150px; /* 150px here is the height given for the row of two rows , here only block 1 and block2 gets height of 150px
    where other blocks are the same of*/
    grid-template-columns: 150px 150px 150px 1fr; /* Here for the column , its for the width of column , says there should 
    be three coulmm of width 150px*/
    grid-auto-rows:150px;

}
.tem{
    grid-row: 1/3;
    
}

.its{
   
    grid-column: 1/ span 4;
    
}
.item1{
    border: 1px solid black;
    background-color: rgb(233, 111, 199);
}
.int{
    grid-row-start: 1;
    grid-row-end: 2;
    grid-column-start: 3;
}

.item2{
    border: 1px solid black;
    background-color: blueviolet;

}
.item3{
    border: 1px solid black;
    background-color: rgb(103, 226, 220);
   
}
.item4{
    border: 1px solid black;
    background-color: rgb(135, 239, 90);
}
.item5{
    border: 1px solid black;
    background-color: rgb(98, 111, 229);
   
   
}
.item6{
    border: 1px solid black;
    background-color: rgb(235, 115, 93);
}
.alto{
    margin-top: 20px;
    border: 3px solid black;
    display: grid;
    grid-template-rows:   repeat(2, 150px); 
    grid-template-columns: repeat(auto-fit,minmax(300px,1fr));/* makes it responsive , if auto-fit is used one after another , and min 150px , 1fr 
    lets to have no space */
    /*grid-template-columns: min-content repeat(3,1fr);  min-content takes the longest word and make it into that length where max-content
    put whole sentences in one
    here min-content inly make change in the first column only */
    grid-auto-rows: 150px;
    grid-gap:10px;
    align-content: center;
    

}
.container{
    border:5px solid black;
    margin:20px ;
    display:grid ;
    grid-template-rows: repeat(3,150px);
    grid-template-columns: repeat(auto-fit,minmax(300px,1fr));
    grid-auto-rows: 150px;
     
}
.first{
    border: 2px solid black ;
    background-color: blueviolet;
    

}
.second{
    border: 2px solid black ;
    background-color: rgb(211, 181, 237);
    grid-area: 1/2/3/4;
    background-image: url("https://hips.hearstapps.com/hmg-prod/images/nature-quotes-landscape-1648265299.jpg?crop=0.676xw:1.00xh;0.148xw,0&resize=640:*");
}
.third{
    border: 2px solid black ;
    background-color: rgb(138, 136, 140);
    
    
}
.four{
    border: 2px solid black ;
    background-color: rgb(128, 101, 152);
    
}
.five{
    border: 2px solid black ;
    background-color: rgb(54, 43, 65);
    
    grid-row-start: 2;/* Here if you use only row end and strat it miss places the block so need to use column start and end 
    to place in its exact place , or else use  grid-area:row start/column start / row end / column end */
    grid-row-end: 4;
    grid-column-start: 4;
    grid-column-end: 5;
    background-image: url("https://d1whtlypfis84e.cloudfront.net/guides/wp-content/uploads/2019/07/23090714/nature-1024x682.jpeg");
    
}
.six{
    border: 2px solid black ;
    background-color: rgb(79, 72, 85);
    
}
.seven{
    border: 2px solid black ;
    background-color: rgb(62, 57, 66);
    grid-area: 3/2/4/4;
    
} /*justify and align */
.just {
    padding:30px ;
    margin:20px;
    justify-content: end ;/*takes whole container to horizontal left right */
    align-content:center  ;
    justify-items: center;/*only focuses the item horizontally */
    align-items: center;/* item to vertical*/
}
.override{
    justify-self: end;/* overrides the grid-items in the main container */
    align-self: start;
}
.self{
    
    padding:30px ;
    margin:20px;
    justify-content: end ;/*takes whole container to horizontal left right */
    align-content:center  ;
    

}
.sit{
     display: grid;
    justify-self: end;/* overrides the grid-items in the main container */
    align-self: start;
}
.soft{
    display: grid;
    justify-items: end;/* separate the sentence*/
    align-items: center;
}
.play{
    display: grid;
    justify-content: end;/* content takes whole board portion making testing together */
    align-content: center;
}

